{"version":3,"sources":["components/layout/Navigation.js","components/layout/Footer.js","actions/searchAction.js","actions/types.js","components/home/SearchForm.js","components/home/MovieCard.js","components/home/MovieNotFound.js","components/home/MovieContainer.js","components/layout/Spinner.js","components/home/Landing.js","reducers/searchReducer.js","reducers/index.js","store.js","components/home/Movie.js","App.js","serviceWorker.js","index.js","APIKey.js","components/layout/spinner.gif"],"names":["Navigation","Navbar","bg","variant","className","Container","to","Brand","href","Toggle","Collapse","Nav","Link","id","footer","expand","sticky","Row","Col","md","target","setLoading","type","SearchForm","onChange","e","props","searchMovie","value","onSubmit","preventDefault","fetchMovies","text","Jumbotron","fluid","this","Form","Control","name","placeholder","Button","size","Component","connect","state","movies","dispatch","payload","axios","get","APIKey","then","response","data","catch","err","console","log","MovieCard","movie","Card","Body","Img","src","Poster","alt","Title","Year","imdbID","MovieNotFound","MovieContainer","content","Response","Search","map","index","key","Spinner","spinner","style","width","margin","display","Landing","loading","initialState","combineReducers","action","middleware","thunk","composeEnhancers","composeWithDevTools","trace","traceLimit","store","createStore","rootReducer","applyMiddleware","Movie","fetchMovie","match","params","movieInfo","ListGroup","Item","Genre","Released","Rated","imdbRating","Writer","Actors","Plot","App","Fragment","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e1f6bfc9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" className=\"text-light\">\r\n      <Container>\r\n        <LinkContainer to=\"/\">\r\n          <Navbar.Brand href=\"#home\" className=\"brand-text\">\r\n            Movies & Series Info\r\n          </Navbar.Brand>\r\n        </LinkContainer>\r\n        <Navbar.Toggle />\r\n        <Navbar.Collapse className=\"justify-content-end\">\r\n          <Nav className=\"ml-auto\">\r\n            <Nav.Link href=\"#\">\r\n              <span className=\"fab fa-imdb fa-5x\" id=\"imdb-logo\" />\r\n            </Nav.Link>\r\n            <Nav.Link href=\"#\">\r\n              <i className=\"fab fa-react fa-5x\" id=\"react-logo\" />\r\n            </Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nexport default function footer() {\r\n  return (\r\n    <Navbar\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      expand=\"lg\"\r\n      sticky=\"bottom\"\r\n      className=\"p-3 mt-4 text-light\"\r\n    >\r\n      <Container>\r\n        <Row className=\"text-center\">\r\n          <Col md=\"12\">\r\n            Developed By:\r\n            <span className=\"text-warning\"> David Asare</span>\r\n            , Using <i className=\"fab fa-react\" id=\"react-logo\" /> React JS\r\n            &amp; Redux JS integrated with external movies data API{\" \"}\r\n            <a href=\"http://www.omdbapi.com/\" target=\"blank\">\r\n              OMDB{\" \"}\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from \"./types\";\r\nimport axios from \"axios\";\r\nimport { APIKey } from \"../APIKey\";\r\n\r\nexport const searchMovie = text => dispatch => {\r\n  dispatch({\r\n    type: SEARCH_MOVIE,\r\n    payload: text\r\n  });\r\n};\r\n\r\nexport const fetchMovies = text => dispatch => {\r\n  axios\r\n    .get(`https://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n    .then(response =>\r\n      dispatch({\r\n        type: FETCH_MOVIES,\r\n        payload: response.data\r\n      })\r\n    )\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const fetchMovie = id => dispatch => {\r\n  axios\r\n    .get(`https://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n    .then(response =>\r\n      dispatch({\r\n        type: FETCH_MOVIE,\r\n        payload: response.data\r\n      })\r\n    )\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: LOADING\r\n  };\r\n};\r\n","export const SEARCH_MOVIE = \"SEARCH_MOVIE\";\r\nexport const FETCH_MOVIES = \"FETCH_MOVIES\";\r\nexport const FETCH_MOVIE = \"FETCH_MOVIE\";\r\nexport const LOADING = \"LOADING\";\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {\r\n  searchMovie,\r\n  fetchMovies,\r\n  setLoading\r\n} from \"../../actions/searchAction\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class SearchForm extends Component {\r\n  onChange = e => {\r\n    this.props.searchMovie(e.target.value);\r\n  };\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.fetchMovies(this.props.text);\r\n    this.props.setLoading();\r\n  };\r\n  render() {\r\n    return (\r\n      <Jumbotron fluid className=\"mt-5 text-center\">\r\n        <Container>\r\n          <h1 className=\"display-4 mb-3\">\r\n            <i className=\"fa fa-search\" /> Search for a Movie, TV series ...\r\n          </h1>\r\n          <form onSubmit={this.onSubmit}>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"searchText\"\r\n              placeholder=\"Search for a Movie, TV series ....\"\r\n              onChange={this.onChange}\r\n            />\r\n            <Button variant=\"primary\" size=\"lg\" type=\"submit\" className=\"mt-3\">\r\n              Search\r\n            </Button>\r\n          </form>\r\n        </Container>\r\n      </Jumbotron>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatesToProps = state => ({\r\n  text: state.movies.text\r\n});\r\n\r\nexport default connect(mapStatesToProps, {\r\n  searchMovie,\r\n  fetchMovies,\r\n  setLoading\r\n})(SearchForm);\r\n","import React, { Component } from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport class MovieCard extends Component {\r\n  render() {\r\n    const { movie } = this.props;\r\n    return (\r\n      <Col md={3} className=\"mb-5\">\r\n        <Card bg=\"dark\" text=\"white\" className=\"text-center h-100\">\r\n          {\" \"}\r\n          <Card.Body>\r\n            {\" \"}\r\n            <Card.Img\r\n              className=\"w-100 mb-2\"\r\n              src={movie.Poster}\r\n              alt=\"Movie Cover\"\r\n            />\r\n            <Card.Title>\r\n              {movie.Title} - {movie.Year}\r\n            </Card.Title>\r\n            <Link className=\"btn btn-primary\" to={\"/movie/\" + movie.imdbID}>\r\n              Movie Details <i className=\"fas fa-chevron-right\" />\r\n            </Link>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieCard;\r\n","import React from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\n\r\nfunction MovieNotFound() {\r\n  return (\r\n    <Col md=\"12\">\r\n      <div className=\"text-center\">\r\n        <h1>Movie not found! Try again...</h1>\r\n      </div>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default MovieNotFound;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport MovieNotFound from \"./MovieNotFound\";\r\n\r\nexport class MovieContainer extends Component {\r\n  render() {\r\n    const { movies } = this.props;\r\n    let content = \"\";\r\n\r\n    content =\r\n      movies.Response === \"True\" ? (\r\n        movies.Search.map((movie, index) => (\r\n          <MovieCard key={index} movie={movie} />\r\n        ))\r\n      ) : (\r\n        <MovieNotFound />\r\n      );\r\n    return <div className=\"row\">{content}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies.movies\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieContainer);\r\n","import React from 'react'\r\nimport spinner from \"./spinner.gif\";\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <img src={spinner} \r\n        style={{width: \"200px\", margin: \"auto\", display: \"block\"}} alt=\"Loading...\"/>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","import React, { Component } from \"react\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport MoviesContainer from \"./MovieContainer\";\r\nimport Spinner from \"../layout/Spinner\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class Landing extends Component {\r\n  render() {\r\n    const { loading } = this.props;\r\n    return (\r\n      <Container>\r\n        <SearchForm />\r\n        {loading ? <Spinner /> : <MoviesContainer />}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  loading: state.movies.loading\r\n});\r\nexport default connect(mapStateToProps)(Landing);\r\n","import {\r\n  SEARCH_MOVIE,\r\n  FETCH_MOVIES,\r\n  FETCH_MOVIE,\r\n  LOADING\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  text: \" \",\r\n  movies: [],\r\n  loading: false,\r\n  movie: []\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case SEARCH_MOVIE:\r\n      return {\r\n        ...state,\r\n        text: action.payload,\r\n        loading: false\r\n      };\r\n    case FETCH_MOVIES:\r\n      return {\r\n        ...state,\r\n        movies: action.payload,\r\n        loading: false\r\n      };\r\n    case FETCH_MOVIE:\r\n      return {\r\n        ...state,\r\n        movie: action.payload,\r\n        loading: false\r\n      };\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport searchReducer from \"./searchReducer\";\r\n\r\nexport default combineReducers({\r\n    movies: searchReducer\r\n});","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\nconst composeEnhancers = composeWithDevTools({\r\n  trace: true,\r\n  traceLimit: 25\r\n});\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeEnhancers(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchMovie, setLoading } from \"../../actions/searchAction\";\r\nimport Spinner from \"../layout/Spinner\";\r\n\r\nexport class Movie extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchMovie(this.props.match.params.id);\r\n    this.props.setLoading();\r\n  }\r\n  render() {\r\n    const { loading, movie } = this.props;\r\n    let movieInfo = (\r\n      <Container>\r\n        <Row className=\"mt-5\">\r\n          <Col md={4}>\r\n            <Card>\r\n              <Card.Img src={movie.Poster} className=\"thumbnail\" alt=\"Poster\" />\r\n            </Card>\r\n          </Col>\r\n          <Col md={8}>\r\n            <h2 className=\"mb-4\">{movie.Title}</h2>\r\n            <ListGroup>\r\n              <ListGroup.Item>\r\n                <strong>Genre:</strong> {movie.Genre}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <strong>Released:</strong> {movie.Released}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <strong>Rated:</strong> {movie.Rated}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <strong>IMDB Rating:</strong> {movie.imdbRating}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <strong>Writer:</strong> {movie.Writer}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <strong>Actors:</strong> {movie.Actors}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Card bg=\"dark\" text=\"white\">\r\n            <Col md={12}>\r\n              <h3>About</h3>\r\n              {movie.Plot}\r\n              <hr />\r\n              <a\r\n                href={\"http:/www.imdb.com/title/\" + movie.imdbID}\r\n                className=\"btn btn-warning\"\r\n              >\r\n                View on IMDB\r\n              </a>\r\n              {\"     \"}\r\n              <Link to=\"/\" className=\"btn btn-primary text-light\">\r\n                Go Back To Search\r\n              </Link>\r\n            </Col>\r\n          </Card>\r\n        </Row>\r\n      </Container>\r\n    );\r\n\r\n    let content = loading ? <Spinner /> : movieInfo;\r\n    return <div>{content}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.movies.loading,\r\n  movie: state.movies.movie\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchMovie, setLoading })(Movie);\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { Provider } from \"react-redux\";\nimport Navigation from \"./components/layout/Navigation\";\nimport Footer from \"./components/layout/Footer\";\nimport Landing from \"./components/home/Landing\";\nimport store from \"./store\";\nimport { Route } from \"react-router-dom\";\nimport Movie from \"./components/home/Movie\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Provider store={store}>\n        <Navigation />\n        <Route exact path=\"/\" component={Landing} />\n        <Route exact path=\"/movie/:id\" component={Movie} />\n        <Footer />\n      </Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { HashRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\r\n  APIKey: \"11bc5b6\"\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/spinner.26ef8bb4.gif\";"],"sourceRoot":""}